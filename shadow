import cv2
import numpy as np
import ezdxf

# Step 1: Load the image
image_path = 'image.png'  # Replace with your image path
image = cv2.imread(image_path, cv2.IMREAD_GRAYSCALE)

# Rotate the image by 180 degrees
image = cv2.rotate(image, cv2.ROTATE_180)

# Step 2: Apply Canny Edge Detection
edges = cv2.Canny(image, threshold1=100, threshold2=200)

# Step 3: Find contours (outlines) in the edges
contours, _ = cv2.findContours(edges, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

# Step 4: Create a new DXF document
doc = ezdxf.new(dxfversion='R2010')
msp = doc.modelspace()

# Step 5: Convert contours to polylines and add them to the DXF
for contour in contours:
    points = [tuple(point[0]) for point in contour]  # Convert from (n, 1, 2) shape to (n, 2)
    # Add polyline to DXF
    msp.add_lwpolyline(points, close=True)

# Step 6: Save the DXF file
dxf_output_path = 'output.dxf'
doc.saveas(dxf_output_path)

print(f"DXF file saved to {dxf_output_path}")
